<% layout('layouts/boilerplate') -%>

    <style>
        /* Horizontal Scroll Bar */
        #filters {
            display: flex;
            overflow-x: auto;
            white-space: nowrap;
            gap: 1rem;
            height: 100px !important;
            padding: 10px;
            scrollbar-width: none;
            -ms-overflow-style: none;
        }

        #filters::-webkit-scrollbar {
            display: none;
        }

        /* Individual Filter Items */
        .filters {
            text-align: center;
            flex: 0 0 auto;
            padding: 10px 15px;
            border-radius: 10px;
            background: #f4f4f4;
            transition: all 0.3s ease-in-out;
            opacity: 0.7;
        }

        .filters i {
            font-size: 1.5rem;
            display: block;
            margin-bottom: 5px;
            color: #333;
        }

        .filters:hover,
        .filters.active {
            background: #ff4500;
            color: #fff;
            opacity: 1;
            cursor: pointer;
        }

        .icons-navbar {
            position: sticky;
            top: 80px;
            z-index: 100;
            display: flex;
            flex-direction: column;
            height: 100px;;
            align-items: center;
            padding: 10px;
            background: #fff;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            border-radius: 10px;
            margin-bottom: 20px;
        }

        /* Smooth Scroll Buttons */
        .scroll-btn {
            background: none;
            border: none;
            font-size: 1.5rem;
            cursor: pointer;
            padding: 10px;
        }

        .scroll-btn:hover {
            color: #ff4500;
        }

        .scroller-container {
            display: flex;
            align-items: center;
            width: 100%;
            height: 80px;
        }

        .filters i {
            position: relative;
        }

        .row {
            width: 100vw;
            display: flex;
            flex-direction: row;
            flex-wrap: wrap;
            padding: 10px;
            gap: 10px;
        }
    </style>

    <div class="icons-navbar">
        <div class="scroller-container">
            <button class="scroll-btn" id="scroll-left">&#9665;</button>

            <div id="filters">
                <% const categories=[ { icon: "fa-fire" , label: "Trending" , id: "trending" }, { icon: "fa-bed" ,
                    label: "Rooms" , id: "rooms" }, { icon: "fa-mountain-sun" , label: "Mountain" , id: "mountain" }, {
                    icon: "fa-person-swimming" , label: "Pools" , id: "pools" }, { icon: "fa-water-ladder" ,
                    label: "Ladders" , id: "ladders" }, { icon: "fa-person-skiing" , label: "Skiing" , id: "skiing" }, {
                    icon: "fa-person-hiking" , label: "Hiking" , id: "hiking" }, { icon: "fa-person-walking-with-cane" ,
                    label: "Walking Cane" , id: "cane" }, { icon: "fa-house-flood-water" , label: "Beach Resorts" ,
                    id: "beach" } ]; %>

                    <% for (let cat of categories) { %>
                        <div class="filters" data-category="<%= cat.id %>">
                            <i class="fa-solid <%= cat.icon %>"></i>
                            <%= cat.label %>
                        </div>
                        <% } %>
            </div>

            <button class="scroll-btn" id="scroll-right">&#9655;</button>
        </div>

        <!-- <div class="form-check form-switch">
            <input class="form-check-input" type="checkbox" role="switch" id="flexSwitchCheckChecked" checked>
            <label class="form-check-label" for="flexSwitchCheckChecked">Show Taxes Before</label>
        </div> -->
    </div>



    <!-- <div class="row row-cols-lg-3 row-cols-md-3 row-cols-sm-1"> -->
    <div class="row1">
        <% for (let post of lists) { %>
            <a href="/listings/<%= post._id %>" class="listing-link">
                <div class="card col listing-card" style="width: 20rem;">
                    <img src="<%= post.image.url %>" class="card-img-top" alt="listings">
                    <div class="card-img-overlay"></div>
                    <div class="love_icons"><i class="fa-solid fa-heart"></i>
                    </div>
                    <div class="card-body">

                        <p class="card-text">
                            <%= post.title %><br />
                                &#8377; <%= post.price.toLocaleString("en-IN") %>/ night
                        </p>
                    </div>
                </div>
            </a>
            <% } %>
    </div>
    <!-- <ul>
            <% for (let post of lists) { %>
                <p><a href="/listings/<%= post._id %>">
                        <%= post.title %>
                    </a></p>
                <% } %>
        </ul> -->

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const filterContainer = document.getElementById("filters");
            const scrollLeftBtn = document.getElementById("scroll-left");
            const scrollRightBtn = document.getElementById("scroll-right");

            function scrollLeftFunc() {
                if (filterContainer) {
                    filterContainer.scrollBy({ left: -200, behavior: "smooth" });
                }
            }

            function scrollRightFunc() {
                if (filterContainer) {
                    filterContainer.scrollBy({ left: 200, behavior: "smooth" });
                }
            }

            // Add event listeners only if buttons exist
            if (scrollLeftBtn) scrollLeftBtn.addEventListener("click", scrollLeftFunc);
            if (scrollRightBtn) scrollRightBtn.addEventListener("click", scrollRightFunc);

            function updateScrollButtons() {
                scrollLeftBtn.style.display = filterContainer.scrollLeft > 0 ? "block" : "none";
                scrollRightBtn.style.display = filterContainer.scrollWidth > filterContainer.clientWidth + filterContainer.scrollLeft ? "block" : "none";
            }

            filterContainer.addEventListener("scroll", updateScrollButtons);
            window.addEventListener("resize", updateScrollButtons);
            updateScrollButtons();

            // Lazy loading images
            const images = document.querySelectorAll("img.lazyload");
            const observer = new IntersectionObserver(entries => {
                entries.forEach(entry => {
                    if (entry.isIntersecting) {
                        entry.target.src = entry.target.dataset.src;
                        entry.target.classList.remove("lazyload");
                    }
                });
            });

            images.forEach(img => observer.observe(img));
        });
    </script>